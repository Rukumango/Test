(function(){"use strict";(function(r,f,y){y.findByStoreName("UserStore");let d;const h={onLoad:function(){d=f.registerCommand({name:"time",displayName:"Time",displayDescription:"Get the formatted timestamp",description:"Get the formatted timestamp",options:[{name:"time",description:"The time or offset to format",type:3,required:!0,displayName:"time",displayDescription:"The time (e.g., 3pm, 3:14am, +5, +4:35)"},{name:"style",description:"The format style (optional)",type:3,required:!1,displayName:"style",displayDescription:"short/long (time, date, date/time, relative)"}],execute:T,applicationId:"-1",inputType:1,type:1})},onUnload:function(){d()}};async function T(c){const l=c[0].value,p=c[1]?.value;let o;const n=l.match(/^([+-]?)(\d+)(?::(\d+))?$/);if(n){const t=n[1]==="-"?-1:1,a=parseInt(n[2],10)||0,m=parseInt(n[3],10)||0,s=new Date;s.setHours(s.getHours()+t*a),s.setMinutes(s.getMinutes()+t*m),o=Math.floor(s.getTime()/1e3)}else{const t=l.match(/(\d{1,2})(?::(\d{2}))?\s*([ap]m)?/i);if(t){const a=parseInt(t[1],10),m=t[2]?parseInt(t[2],10):0,s=t[3]?t[3].toLowerCase():"",i=new Date;i.setHours(s==="pm"&&a<12?a+12:a%12),i.setMinutes(m),i.setSeconds(0),i.setMilliseconds(0),o=Math.floor(i.getTime()/1e3)}else return{content:"Please provide a valid time or offset."}}let u=`<t:${o}>`,e="";if(p)switch(p.toLowerCase()){case"st":e="t";break;case"lt":e="T";break;case"sd":e="d";break;case"ld":e="D";break;case"sdt":e="f";break;case"ldt":e="F";break;case"r":e="R";break}return e&&(u=`<t:${o}:${e}>`),{content:`Formatted Timestamp: ${u}`}}return r.default=h,Object.defineProperty(r,"__esModule",{value:!0}),r})({},vendetta.commands,vendetta.metro)})();
