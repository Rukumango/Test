(function(n,p){"use strict";let r;const f={onLoad(){r=p.registerCommand({name:"time",displayName:"Time",displayDescription:"Get a Discord\u2010formatted timestamp",description:"Get a Discord\u2010formatted timestamp",options:[{name:"time",description:"The time or offset to format (e.g. 3pm, 14:05, +5, +4:35)",type:3,required:!0},{name:"style",description:"Format style: t/T/d/D/f/F/R (or aliases: st/lt/sd/ld/sdt/ldt/rel)",type:3,required:!1}],execute:this.executeCommand.bind(this),applicationId:"-1",inputType:1,type:1})},onUnload(){r?.()},async executeCommand(a){const l=a[0].value,m=a[1]?.value?.toLowerCase();let e=new Date,d;const o=l.match(/^([+-])(\d+)(?::(\d+))?$/);if(o){const t=o[1]==="-"?-1:1,s=parseInt(o[2],10),i=parseInt(o[3]??"0",10);e.setHours(e.getHours()+t*s),e.setMinutes(e.getMinutes()+t*i),d=Math.floor(e.getTime()/1e3)}else{const t=l.match(/^(\d{1,2})(?::(\d{2}))?\s*([ap]m)?$/i);if(!t)return{content:"Provide a valid time (e.g. `3pm`, `14:05`) or offset (`+5`, `-2:30`)."};let s=parseInt(t[1],10);const i=parseInt(t[2]??"0",10),u=t[3]?.toLowerCase();u==="pm"&&s<12&&(s+=12),u==="am"&&s===12&&(s=0),e.setHours(s,i,0,0),d=Math.floor(e.getTime()/1e3)}const y={t:"t",T:"T",d:"d",D:"D",f:"f",F:"F",R:"R",st:"t",lt:"T",sd:"d",ld:"D",sdt:"f",ldt:"F",rel:"R"};let c="t";if(m){const t=y[m];if(!t)return{content:"Invalid style: use `t/T/d/D/f/F/R` or `st/lt/sd/ld/sdt/ldt/rel`."};c=t}return{content:`<t:${d}:${c}>`}}};return n.default=f,Object.defineProperty(n,"__esModule",{value:!0}),n})({},vendetta.commands);
